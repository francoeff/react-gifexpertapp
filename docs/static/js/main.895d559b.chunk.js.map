{"version":3,"sources":["components/AddCategoria.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategoria","setCategoria","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorias","alert","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAe,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAAkB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAe5C,OACI,mCACI,sBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,GAC1BR,GAAa,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC3CN,EAAc,KAGdO,MAAM,oCAKN,SACI,uBACIC,KAAK,OACLC,MAAOV,EACPW,SAnBU,SAACR,GACvBF,EAAcE,EAAES,OAAOF,e,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,8DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAQF,EAAIE,MACZV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QARxB,kBAWZM,GAXY,4CAAH,sDCCPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAOV,EAAQ,EAARA,IAChC,OACI,sBAAKc,UAAU,8CAAf,UACI,6BAAKJ,IACL,qBAAKK,IAAKf,EAAKgB,IAAKN,QCDnBO,EAAU,SAAC,GAAiB,IAAhBnB,EAAe,EAAfA,UAAe,ECDZ,SAACA,GAAe,IAAD,EACbf,mBAAS,CAC/BsB,KAAU,GACVa,SAAU,IAHyB,mBAChCC,EADgC,KACzBC,EADyB,KAmBvC,OAbAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAOkB,EACPL,SAAS,SAItB,CAACpB,IAEGqB,EDhBwBK,CAAa1B,GAAhCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAapB,OACI,qCACI,oBAAIJ,UAAU,qDAAd,SAAoEhB,IAClEoB,GAAW,cAbVP,EAAOJ,KAAI,SAAAC,GACd,OACI,cAAC,EAAD,eAESA,GADCA,EAAIC,WEefgB,EAxBM,WAAO,IAAD,EACY1C,mBAAS,CAAC,gBADtB,mBAChBQ,EADgB,KACJT,EADI,KAGvB,OACQ,qCACI,8CACA,cAAC,EAAD,CAAcA,aAAcA,IAC5B,uBAEA,6BAEQS,EAAWgB,KAAI,SAAAT,GACX,OACI,cAAC,EAAD,CAAkCA,UAAWA,GAA7C,cAAqBA,aCZrD4B,IAASC,OACL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.895d559b.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nexport const AddCategoria = ({setCategoria}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategoria(categorias => [inputValue, ...categorias])\r\n            setInputValue(\"\");\r\n        }\r\n        else\r\n            alert(\"El campo no debe estar vac√≠o\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nAddCategoria.propTypes = {\r\n    setCategoria : PropTypes.func.isRequired,\r\n}\r\n","\r\nexport const getGifs = async (categoria) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoria) }&limit=9&api_key=dnloQQzgYyIziJPjej2cj2TELAwBHGwN`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id : img.id,\r\n            title : img.title,\r\n            url : img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from \"react\";\r\n\r\nexport const GifGridItem = ({title, url}) =>{\r\n    return (\r\n        <div className='col-3 animate__animated animate__rubberBand'>\r\n            <h4>{title}</h4>\r\n            <img src={url} alt={title}/>\r\n        </div>\r\n    )\r\n}","// import React, {useState, useEffect} from \"react\";\r\nimport React from \"react\";\r\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\r\nimport {GifGridItem} from './GifGridItem';\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(categoria);\r\n\r\n    const printImages = () => {\r\n        return images.map(img =>{\r\n            return (\r\n                <GifGridItem\r\n                    key={ img.id }\r\n                    { ...img }\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className='titulo-categoria animate__animated animate__fadeIn'>{categoria}</h3>\r\n            { loading && 'Cargando...'}\r\n            {printImages()}\r\n        </>\r\n    )\r\n}","import { useState, useEffect } from 'react';\r\nimport {getGifs} from \"../helpers/getGif\";\r\n\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    const [state, setState] = useState({\r\n        data    : [],\r\n        loading : true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(categoria)\r\n            .then( imgs => {\r\n\r\n                setState({\r\n                    data : imgs,\r\n                    loading: false\r\n                });\r\n\r\n            })\r\n    }, [categoria])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport {AddCategoria} from \"./components/AddCategoria\";\r\nimport {GifGrid} from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n    const [categorias, setCategoria] = useState([\"Dragon ball\"]);\r\n\r\n    return(\r\n            <>\r\n                <h2>GifExpertApp</h2>\r\n                <AddCategoria setCategoria={setCategoria} />\r\n                <hr/>\r\n\r\n                <ol>\r\n                    {\r\n                        categorias.map(categoria => {\r\n                            return(\r\n                                <GifGrid key={`cat-${categoria}`} categoria={categoria} />\r\n                            )\r\n                        })\r\n                    }\r\n                </ol>\r\n                \r\n            </>\r\n    );\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './GifExpertApp';\nimport GifExpertApp from \"./GifExpertApp\";\nReactDOM.render(\n    <GifExpertApp />\n    ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}